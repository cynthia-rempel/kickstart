# usual setup
install
reboot --eject
lang en_US.UTF-8
keyboard us
timezone --utc Erc/UTC
selinux --enforcing

#Use cmdline mode install
cmdline

# clear the disk and create a new mbr partition for boot
zerombr
clearpart --all --initlabel
bootloader --location=mbr --boot-drive=sda
reqpart --add-boot

# Disk partitioning information
#
# Your disk should be 32GB: 1GB for /boot and 30GB for the physical volume
#
# Journal for boot is not required therefore ext2
part /boot --fstype="ext2" --ondisk=sda --size=512 --label=boot --mkfsoptions="-m 0" --fsoptions="rw,nodev,noexec,nosuid"

# create a new logical volume and group for everything lese
part pv.01 --size=10240 --ondisk=sda
volgroup vg_atomicos pv.01

# make a separate volume-group to simplify docker-storage-setup
part pv.02 --grow --ondisk=sda
volgroup vg_docker pv.02

# add a 20GB XFS partition for root
logvol / --size=2048 --fstype="ext4" --vgname=vg_atomicos --name=root --grow

# /home -> /var/home
logvol /var/home --size=2048 --fstype="ext4" --vgname=vg_atomicos --name=lv_home --mkfsoptions="-m 0" --fsoptions="rw,nodev,nosuid"

# /tmp -> /sysroot/tmp, change this to 4096 for production
logvol /sysroot/tmp --fstype="ext4" --size=2048 --vgname=vg_atomicos --name=lv_tmp --mkfsoptions="-m 1" --fsoptions="rw,nodev,noexec,nosuid"

logvol /var/log       --fstype="ext4" --size=1024 --vgname=vg_atomicos --name=lv_var-log --mkfsoptions="-m 0" --fsoptions="rw,nodev,noexec,nosuid"

logvol /var/log/audit --fstype="ext4" --size=512  --vgname=vg_atomicos --name=lv_var-aud --mkfsoptions="-m 0" --fsoptions="rw,nodev,noexec,nosuid"

# change this to 4096 for production
logvol /var/tmp       --fstype="ext4" --size=2048 --vgname=vg_atomicos --name=lv_var-tmp --mkfsoptions="-m 1" --fsoptions="rw,nodev,noexec,nosuid"

# CIS Docker Community Edition Benchmark
# 1.1 Ensure a separate partition for containers has been created
#   Have /var/lib/docker fill the remaining space on the drive
logvol /var/lib/docker --grow --percent=100 --fstype="ext4" --name=lv_var_lib_docker --vgname=vg_docker

### Brick Configuration
# https://access.redhat.com/documentation/en-us/red_hat_gluster_storage/3.4/html/administration_guide/Brick_Configuration

part raid.sdb --fstype="mdmember" --size=8192 --grow --ondisk=sdb 
part raid.sdc --fstype="mdmember" --size=8192 --grow --ondisk=sdc 
part raid.sdd --fstype="mdmember" --size=8192 --grow --ondisk=sdd 
part raid.sde --fstype="mdmember" --size=8192 --grow --ondisk=sde 
part raid.sdf --fstype="mdmember" --size=8192 --grow --ondisk=sdf 
part raid.sdg --fstype="mdmember" --size=8192 --grow --ondisk=sdg 
part raid.sdh --fstype="mdmember" --size=8192 --grow --ondisk=sdh 
part raid.sdi --fstype="mdmember" --size=8192 --grow --ondisk=sdi 
part raid.sdj --fstype="mdmember" --size=8192 --grow --ondisk=sdj 
part raid.sdk --fstype="mdmember" --size=8192 --grow --ondisk=sdk 
part raid.sdk --fstype="mdmember" --size=8192 --grow --ondisk=sdl 
part raid.sdm --fstype="mdmember" --size=8192 --grow --ondisk=sdm 

raid raid.md0 --level=RAID10 --device=md0 --fstype="lvmpv" --chunksize=512 raid.sdb raid.sdc raid.sdd raid.sde raid.sdf raid.sdg raid.sdh raid.sdi raid.sdj raid.sdk raid.sdl raid.sdm

volgroup vg_bricks --pesize=4096 raid.md0

logvol --size 10G --thin vg_bricks/examplepool --name thinvol --grow

# disable cloud-init, enable ntp, docker and ssh
# services --disabled="cloud-init,cloud-config,cloud-final,cloud-init-local" --enabled="systemd-timesyncd,network,sshd,docker"
services --enabled="systemd-timesyncd,network,sshd,docker"

# set up OSTree to pull a tree from the USB key
ostreesetup --osname="centos-atomic-host" --remote="centos-atomic-host" --url="file:///install/ostree" --ref="centos-atomic-host/7/x86_64/standard" --nogpg

# create static network interface, for Kubernetes setup.  Requires changing this line
# for each machine
network --device=eth0 --bootproto=static --ip=192.168.1.102 --netmask=255.255.255.0 --gateway=192.168.1.1 --nameserver=192.168.1.1 

# Lock the root account by default
rootpw --lock

# create sudo user.
user --name=atomic --groups=wheel --password=AtomicAtomic

%packages
@core
dracut-fips
aide
screen
%end

# RHEL-07-021300
%addon com_redhat_kdump --disable
%end

%addon org_fedora_oscap
content-type = scap-security-guide
profile = stig
%end

%anaconda
pwpolicy root --minlen=6 --minquality=50 --strict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=50 --strict --nochanges --notempty
pwpolicy luks --minlen=6 --minquality=50 --strict --nochanges --notempty
%end

# enabling this breaks cloud-init
# %include /usr/share/anaconda/interactive-defaults.ks

# reset ostree to upstream
%post --erroronfail
rm -f /etc/ostree/remotes.d/centos-atomic-host.conf
ostree remote add --set=gpg-verify=true centos-atomic-host 'http://mirror.centos.org/centos/7/atomic/x86_64/repo'
%end

%post
echo "STORAGE_DRIVER=overlay2
DEVS=/dev/sda3
CONTAINER_ROOT_LV_NAME=lv_var_lib_docker
CONTAINER_ROOT_LV_SIZE=100%FREE
CONTAINER_ROOT_LV_MOUNT_PATH=/var/lib/docker
VG=dockervg" >> /etc/sysconfig/docker-storage-setup
%end

# https://access.redhat.com/documentation/en-us/red_hat_gluster_storage/3.1/html/administration_guide/chap-managing_containerized_rhgs
%post
mkdir -p /etc/glusterfs /var/lib/glusterd /var/log/glusterfs
%end
# References:
# Partition Sizing:
# https://www.lisenet.com/2017/centos-7-server-hardening-guide/
